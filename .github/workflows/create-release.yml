name: create-release

on:
  push:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    # ignore this check if the commit message contains a flag to skip https://github.com/marketplace/actions/skip-based-on-commit-message
    if: "!contains(github.event.head_commit.message, 'ci(skip)')"
    env:
      PACKAGE_VERSION: 0.0.0
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token, note adding it here allows all actions that need it to access it.
      CI: true # stops tests running in watch mode

    strategy:
      matrix:
        node-version: [12.16.1]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # temp fudge this step to test
      - name: App build
        working-directory: ./app
        run: mkdir build

      - name: Bump package version
        working-directory: ./app
        run: echo ::set-env name=PACKAGE_VERSION::$(npm version minor)

      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: ${{env.PACKAGE_VERSION}}
          release_name: ${{env.PACKAGE_VERSION}}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      # https://github.community/t5/GitHub-Actions/Best-way-to-automate-versioning-publishing-to-GitHub-Package/td-p/31211
      - name: Push version change
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # This token is provided by Actions, you do not need to create your own token
        run: |
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"
          git add app/package.json
          git commit -m "ci(skip): version bump ${{env.PACKAGE_VERSION}}"
          git push "https://$GITHUB_ACTOR:${{secrets.PERSONAL_ACCESS_TOKEN}}@github.com/$GITHUB_REPOSITORY" master

      - name: Create Github Artifact
        run: echo "todo" #https://github.com/actions/upload-artifact

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: "trickycdm-react-server"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-2"
          SOURCE_DIR: "app/build"
          DEST_DIR: production/${{env.PACKAGE_VERSION}}