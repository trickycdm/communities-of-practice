// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render correctly with custom props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    id="test"
    label="Custom label"
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    type="button"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <button
        className="rounded-button"
        id="test"
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        type="button"
      >
        Custom label
      </button>,
      "className": "rounded-button__container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Custom label",
        "className": "rounded-button",
        "id": "test",
        "onClick": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "type": "button",
      },
      "ref": null,
      "rendered": "Custom label",
      "type": "button",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <button
          className="rounded-button"
          id="test"
          onClick={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            }
          }
          type="button"
        >
          Custom label
        </button>,
        "className": "rounded-button__container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Custom label",
          "className": "rounded-button",
          "id": "test",
          "onClick": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
          "type": "button",
        },
        "ref": null,
        "rendered": "Custom label",
        "type": "button",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Button should render correctly with default props 1`] = `
initialize {
  "0": Object {
    "attribs": Object {
      "class": "rounded-button__container",
    },
    "children": Array [
      Object {
        "attribs": Object {
          "class": "rounded-button",
          "type": "button",
        },
        "children": Array [
          Object {
            "data": "no label set...",
            "next": null,
            "parent": [Circular],
            "prev": null,
            "type": "text",
          },
        ],
        "name": "button",
        "namespace": "http://www.w3.org/1999/xhtml",
        "next": null,
        "parent": [Circular],
        "prev": null,
        "type": "tag",
        "x-attribsNamespace": Object {
          "class": undefined,
          "type": undefined,
        },
        "x-attribsPrefix": Object {
          "class": undefined,
          "type": undefined,
        },
      },
    ],
    "name": "div",
    "namespace": "http://www.w3.org/1999/xhtml",
    "next": null,
    "parent": null,
    "prev": null,
    "root": Object {
      "attribs": Object {},
      "children": Array [
        [Circular],
      ],
      "name": "root",
      "namespace": "http://www.w3.org/1999/xhtml",
      "next": null,
      "parent": null,
      "prev": null,
      "type": "root",
      "x-attribsNamespace": Object {},
      "x-attribsPrefix": Object {},
    },
    "type": "tag",
    "x-attribsNamespace": Object {
      "class": undefined,
    },
    "x-attribsPrefix": Object {
      "class": undefined,
    },
  },
  "_root": [Circular],
  "length": 1,
  "options": Object {
    "decodeEntities": true,
    "normalizeWhitespace": false,
    "withDomLvl1": true,
    "xml": false,
  },
}
`;
